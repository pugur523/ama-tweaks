apply plugin: 'maven-publish'
apply plugin: 'fabric-loom'
apply plugin: 'com.replaymod.preprocess'

int mcVersion = project.mcVersion
preprocess {
    tabIndentation = true
}

repositories {
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.fallenbreath.me/releases'
    }
    maven {
        url 'https://masa.dy.fi/maven'
    }
}

// https://github.com/FabricMC/fabric-loader/issues/783
configurations {
    modRuntimeOnly.exclude group: 'net.fabricmc', module: 'fabric-loader'
}
configurations {
    modImplementation.exclude group: 'io.github.prospector', module: 'modmenu'
}
// String tweakeroo_dependency = mcVersion >= 12100 ? "maven.modrinth:tweakeroo:${project.tweakeroo_version}" : "com.github.Andrews54757:tweakfork:${project.tweakfork_version}"

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "com.github.Fallen-Breath:conditional-mixin:${project.conditional_mixin_version}"

    modImplementation "maven.modrinth:modmenu:${project.modmenu_version}"
    if (mcVersion > 11700) modImplementation "maven.modrinth:malilib:${project.malilib_version}"
    else modCompile "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
    modImplementation "maven.modrinth:tweakeroo:${project.tweakeroo_version}"
    // if (mcVersion >= 12100) modImplementation "maven.modrinth:tweakeroo:${project.tweakeroo_version}"
    // else modImplementation files("../../lib/tweakfork-fabric-${project.tweakfork_version}.jar")
    modImplementation "maven.modrinth:tweakermore:${project.tweakermore_version}"
    modImplementation "maven.modrinth:item-scroller:${project.itemscroller_version}"
    // modImplementation "maven.modrinth:syncmatica:${project.syncmatica_version}"
}

JavaVersion JAVA_COMPATIBILITY
if (mcVersion >= 12005) {
    JAVA_COMPATIBILITY = JavaVersion.VERSION_21
} else if (mcVersion >= 11800) {
    JAVA_COMPATIBILITY = JavaVersion.VERSION_17
} else if (mcVersion >= 11700) {
    JAVA_COMPATIBILITY = JavaVersion.VERSION_16
} else {
    JAVA_COMPATIBILITY = JavaVersion.VERSION_1_8
}
JavaVersion MIXIN_COMPATIBILITY_LEVEL = JAVA_COMPATIBILITY

remapJar {
    remapperIsolation = true
}

String artifactVersion = project.mod_version
String fullProjectVersion, fullArtifactVersion

// Example version values:
//   project.mod_version     1.0.3                      (the base mod version)
//   modVersionSuffix        +build.88                  (use github action build number if possible)
//   artifactVersionSuffix   -SNAPSHOT
//   fullModVersion          1.0.3+build.88             (the actual mod version to use in the mod)
//   fullProjectVersion      v1.0.3-mc1.15.2+build.88   (in build output jar name)
//   fullArtifactVersion     1.0.3-mc1.15.2-SNAPSHOT    (maven artifact version)

group = project.maven_group
if (System.getenv("JITPACK") == "true") {
    // move mc version into archivesBaseName, so jitpack will be able to organize archives from multiple subprojects correctly
    base.archivesName = project.archives_base_name + '-mc' + project.minecraft_version
} else {
    base.archivesName = project.archives_base_name
}
fullProjectVersion = project.minecraft_version + '-' + project.mod_version
fullArtifactVersion = artifactVersion + '-mc' + project.minecraft_version
version = fullProjectVersion

static def getGitBranchName() {
    def branch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    return branch ?: 'unknown-branch'
}

def branchName = getGitBranchName()

if (branchName != "main") {
    // rename jar file when it's not main branch
    base.archivesName = project.archives_base_name + "-" + branchName
}

// See https://youtrack.jetbrains.com/issue/IDEA-296490
// if IDEA complains about "Cannot resolve resource filtering of MatchingCopyAction" and you want to know why
processResources {
    inputs.property "id", project.mod_id
    inputs.property "name", project.mod_name
    inputs.property "version", artifactVersion
    inputs.property "minecraft_dependency", project.minecraft_dependency

    filesMatching("fabric.mod.json") {
        def valueMap = [
                "id": project.mod_id,
                "name": project.mod_name,
                "version": artifactVersion,
                "minecraft_dependency": project.minecraft_dependency,
        ]
        expand valueMap
    }

    filesMatching("ama-tweaks.mixins.json") {
        filter { s -> s.replace('{{COMPATIBILITY_LEVEL}}', "JAVA_${MIXIN_COMPATIBILITY_LEVEL.ordinal() + 1}") }
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    if (JAVA_COMPATIBILITY <= JavaVersion.VERSION_1_8) {
        // suppressed "source/target value 8 is obsolete and will be removed in a future release"
        options.compilerArgs << '-Xlint:-options'
    }
}

java {
    sourceCompatibility = JAVA_COMPATIBILITY
    targetCompatibility = JAVA_COMPATIBILITY

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("../../LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

// configure the maven publication
publishing {
    /*
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
    */
}
